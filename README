# No buffer SH1106 OLED display driver

## FEATURES
 * no buffer
 * minimal memory and code size
 * designed for small devices with limited resources ([Atmel AVR ATtiny family](https://en.wikipedia.org/wiki/Atmel_AVR_ATtiny_comparison_chart))


## FUNCTIONS
### Draw a pixel
_fillme_

### Draw a filled rectangle
_fillme_

### Print text
_fillme_

### Display a bitmap
_fillme_

## GETTING STARTED
_fillme_
```c++
#include "SH1106Lib.h"
SH1106Lib display;

void setup() {
	display.initialize();
	display.clearDisplay();
}

void loop() {
 // use display.
}
```


## CONSIDERATIONS
 * Much slower than a bufferd lib like [U8g2](https://github.com/olikraus/u8g2)
 * Printing text that don't span the page boundary (aka y % 8 == 0) lines are about 50% faster
 * Displaying an image that don't span the page boundary (aka y % 8 == 0) lines are about 50% faster
 * Plotting individual pixels in large numbers is slow
 * If constanty updating a text/image on screen, if the design allows it, set the background to SOLID. This is much faster, than clearing the area with fillRect

_Note: all measurements are made on an Arduino UNO with I2C_FASTMODE on, I2C_HARDWARE, I2C_TIMEOUT = 10 and I2C_MAXWAIT = 10_

## LINKS
 * https://playground.arduino.cc/Main/SoftwareI2CLibrary
 * https://github.com/notisrac/TinyPrint

## TASKS
 - [x] Write display initialization code
 - [x] Implement single pixel drawing
 - [x] Implement clearDisplay
 - [x] Implement text printing functionality
 - [x] Use [SoftwareI2CLibrary](https://playground.arduino.cc/Main/SoftwareI2CLibrary)
 - [x] Display bitmaps
 - [ ] Implement drawLine
 - [ ] Implement drawCircle
 - [ ] Implement drawRect
 - [x] Put the whole thing into a library format
 - [x] Write example codes for lib
 - [x] Figure out how the Read Modify Write mode works
 - [x] Implement fillRect with RMW mode
 - [x] Change drawChar to use RMW mode
 - [x] Change drawBitmap to use RMW mode
